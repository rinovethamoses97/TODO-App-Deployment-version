{"version":3,"sources":["components/header.js","App.js","components/about.js","components/Todo.js","components/login.js","components/registration.js","serviceWorker.js","index.js"],"names":["header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","href","Component","App","className","components_header","About","Todo","props","handleChange","event","setState","content","target","value","signout","login","cookie","remove","path","update","updatedContent","document","getElementById","id","innerHTML","axios","post","then","response","data","status","alert","console","log","deletePost","targetId","temp","todo","i","length","_id","username","componentWillMount","bind","assertThisInitialized","saveContent","self","newPost","push","_this2","map","postDate","Date","timeStamp","key","contentEditable","style","float","cursor","onClick","fontWeight","fontStyle","getDate","getMonth","getFullYear","textDecoration","type","placeholder","onChange","Login","handleUsernameChange","handlePasswordChange","password","undefined","load","handleSubmit","preventDefault","error","save","errorMessage","color","components_Todo","onSubmit","htmlFor","required","Registration","handlerePasswordChange","repassword","window","location","Boolean","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c871f569.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nclass header extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={};\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Todo List App</h1>\r\n                <a href=\"/about\">About</a><br></br>\r\n                <a href=\"/login\">Login</a><br/>\r\n                <a href=\"/signup\">Signup</a><br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default header;","import React,{Component} from 'react';\nimport Header from \"./components/header\";\nclass App extends Component{\n  render(){\n    return (\n      <div className=\"container\">\n        <Header/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React,{Component} from \"react\";\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <p>Developed by Rino</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default About;","import React,{Component} from 'react';\r\nimport axios from \"axios\";\r\nimport Login from \"./login\";\r\nimport cookie from 'react-cookies';\r\nclass Todo extends Component{\r\n  constructor(props){\r\n    super();\r\n    this.state={content:\"\",todo:[],login:true,username:props.username};\r\n    this.componentWillMount=this.componentWillMount.bind(this);\r\n    this.saveContent=this.saveContent.bind(this);\r\n    this.handleChange=this.handleChange.bind(this);\r\n  }\r\n  componentWillMount(){\r\n     console.log(\"Getting the todolist from db\");\r\n     var self=this;\r\n     axios.post(\"/getContent\",{username:this.state.username}).then((response)=>{\r\n      if(response.data.status===\"success\"){\r\n        var temp=response.data.data;\r\n        console.log(temp);\r\n        for(var i=0;i<temp.length;i++){\r\n          temp[i].status=true;\r\n        }\r\n        self.setState({todo:response.data.data});\r\n      }\r\n      else{\r\n        alert(\"Error\");\r\n      }\r\n     });\r\n  }\r\n  saveContent(){\r\n    console.log(this.state.content);\r\n    var self=this;\r\n    axios.post(\"/addContent\",{username:this.state.username,content:this.state.content}).then(function(response){\r\n        if(response.data.status===\"success\"){\r\n          alert(\"Todo added\");\r\n          var temp=self.state.todo;\r\n          var newPost=response.data.data;\r\n          newPost.status=true;\r\n          temp.push(newPost);\r\n          self.setState({content:'',todo:temp});\r\n        }\r\n        else{\r\n          alert(\"Error\");\r\n        }\r\n    });\r\n  };\r\n  handleChange=(event)=>{\r\n    this.setState({content:event.target.value});\r\n  }\r\n  signout=()=>{\r\n    this.setState({login:false});\r\n    cookie.remove(\"username\",{path:\"/\"});\r\n  }\r\n  update=(event)=>{\r\n    var updatedContent=document.getElementById(event.target.id+\"content\").innerHTML;\r\n    var id=event.target.id;\r\n    axios.post(\"/update\",{id:id,content:updatedContent}).then((response)=>{\r\n        if(response.data.status===\"success\"){\r\n          alert(\"Todo Updated\");\r\n        }\r\n        else{\r\n          console.log(\"Error\");\r\n        }\r\n    })\r\n  }\r\n  deletePost=(event)=>{\r\n    var targetId=event.target.id;\r\n    axios.post(\"/deleteContent\",{id:event.target.id}).then((response)=>{\r\n        if(response.data.status===\"success\"){\r\n          console.log(\"Todo Deleted\");\r\n          var temp=this.state.todo;\r\n          for(var i=0;i<temp.length;i++){\r\n            if(temp[i]._id===targetId){\r\n              temp[i].status=false;\r\n            }\r\n          }\r\n          this.setState({todo:temp});\r\n        }\r\n        else{\r\n          console.log(\"Error\");\r\n        }\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.login){\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              Welcome {this.state.username}\r\n            </div>\r\n          </div>\r\n          {\r\n            this.state.todo.map((todo)=>{\r\n              if(todo.status){\r\n                var postDate=new Date(todo.timeStamp);  \r\n                return <div className=\"row\" key={todo._id}>\r\n                      <div className=\"col-sm-12\">\r\n                        <div className=\"alert alert-success\">\r\n                          <div id={todo._id+\"content\"} contentEditable=\"true\">\r\n                            {todo.content}\r\n                          </div>\r\n                          <span id={todo._id} style={{float:'right',cursor:'pointer'}} onClick={this.deletePost}>X</span><br></br>\r\n                          <span style={{fontWeight:\"bold\",fontStyle:\"oblique\"}}>Posted on: {postDate.getDate()}-{postDate.getMonth()}-{postDate.getFullYear()}</span>\r\n                          <span onClick={this.update} id={todo._id} style={{cursor:\"pointer\",float:\"right\"}}>Update</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n              }\r\n              else{\r\n                return <div className=\"row\" key={todo._id}>\r\n                      <div className=\"col-sm-12\">\r\n                        <div className=\"alert alert-danger\" style={{textDecoration:\"line-through\"}}>\r\n                          {todo.content}\r\n                          {/* <span id={todo._id} style={{float:'right',cursor:'pointer'}} onClick={this.deletePost}>X</span> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n              }\r\n            })\r\n          }\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" value={this.state.content}  placeholder=\"Enter the ToDo\" onChange={this.handleChange}></input>\r\n            </div>\r\n            <div className=\"col-sm-2\">\r\n              <button className=\"btn btn-primary\" onClick={this.saveContent}>Post</button>\r\n            </div>\r\n            <div className=\"col-sm-2\">\r\n              <button className=\"btn btn-primary\" onClick={this.signout}>Signout</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n      return(<Login/>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React,{Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport Todo from \"./Todo\";\r\nimport cookie from \"react-cookies\";\r\nclass Login extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={username:\"\",password:\"\",error:null,login:false}\r\n    }\r\n    handleUsernameChange=(event)=>{\r\n        this.setState({username:event.target.value});\r\n    }\r\n    handlePasswordChange=(event)=>{\r\n        this.setState({password:event.target.value});\r\n    }\r\n    componentWillMount=()=>{\r\n        if(cookie.load(\"username\")!==undefined){\r\n            this.setState({login:true,username:cookie.load(\"username\")});\r\n        }\r\n    }\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n        axios.post(\"/login\",{username:this.state.username,password:this.state.password}).then((response)=>{\r\n            if(response.data.status===\"success\"){\r\n                if(response.data.login){\r\n                    console.log(\"Login Success\");\r\n                    this.setState({error:null,login:true});\r\n                    cookie.save(\"username\",this.state.username,{path:\"/\"});\r\n                }\r\n                else{\r\n                    console.log(\"Login Failed\");\r\n                    this.setState({error:\"User Not Exist\"});\r\n                    this.setState({login:false});\r\n                }\r\n            }\r\n            else{\r\n                console.log(\"Error\");\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        var errorMessage=this.state.error?(<span style={{color:\"red\"}} className=\"error-message\">{this.state.error}</span>):null;\r\n        if(this.state.login){\r\n            return(\r\n                <div className=\"container\"><Todo username={this.state.username}/></div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                {errorMessage}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    value={this.state.username}\r\n                    onChange={this.handleUsernameChange}\r\n                    />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                    id=\"password\"\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    required\r\n                    value={this.state.password}\r\n                    onChange={this.handlePasswordChange}\r\n                    />\r\n                </div>\r\n                <input className=\"btn btn-primary\" id=\"submit\" type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Login;","import React,{Component} from \"react\";\r\n// import Todo from \"./Todo\";\r\nimport axios from \"axios\";\r\nimport cookie from \"react-cookies\";\r\nclass Registration extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={username:\"\",password:\"\",repassword:\"\",error:null,login:false}\r\n    }\r\n    handleUsernameChange=(event)=>{\r\n        this.setState({username:event.target.value});\r\n    }\r\n    handlePasswordChange=(event)=>{\r\n        this.setState({password:event.target.value});\r\n    }\r\n    handlerePasswordChange=(event)=>{\r\n        this.setState({repassword:event.target.value});\r\n    }\r\n    componentWillMount=()=>{\r\n        if(cookie.load(\"username\")!==undefined){\r\n            this.setState({login:true,username:cookie.load(\"username\")});\r\n        }\r\n    }\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n        if(this.state.password!==this.state.repassword){\r\n            this.setState({error:\"Passwords Does not match\"});\r\n        }\r\n        else{\r\n            this.setState({error:null});\r\n            axios.post(\"/addUser\",{username:this.state.username,password:this.state.password}).then((response)=>{\r\n                if(response.data.status===\"success\"){\r\n                    alert(\"User Registered!! Login to continue\");\r\n                    this.setState({login:true});\r\n                    // cookie.save(\"username\",this.state.username,{path:\"/\"});\r\n                }\r\n                else{\r\n                    console.log(\"Error\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render(){\r\n        var errorMessage=this.state.error?(<span style={{color:\"red\"}} className=\"error-message\">{this.state.error}</span>):null;\r\n        if(this.state.login){\r\n            window.location=\"/login\";\r\n            // return(<div className=\"container\"><Todo username={this.state.username}/></div>);\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                {errorMessage}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    value={this.state.username}\r\n                    onChange={this.handleUsernameChange}\r\n                    />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                    id=\"password\"\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    required\r\n                    value={this.state.password}\r\n                    onChange={this.handlePasswordChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"repassword\">Reenter Password:</label>\r\n                    <input\r\n                    id=\"repassword\"\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    required\r\n                    value={this.state.repassword}\r\n                    onChange={this.handlerePasswordChange}\r\n                    />\r\n                </div>\r\n                \r\n                <input className=\"btn btn-primary\" id=\"submit\" type=\"submit\" value=\"Signup\" />\r\n                </form>\r\n            </div>\r\n        );\r\n        }\r\n\r\n    }\r\n}\r\nexport default Registration;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport About from \"./components/about\";\nimport Login from \"./components/login\";\nimport Registration from \"./components/registration\";\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nReactDOM.render(<Router><Route exact path=\"/\" component={App}/><Route exact path=\"/about\" component={About}></Route>\n<Route exact path=\"/login\" component={Login}></Route>\n<Route exact path=\"/signup\" component={Registration}></Route>\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}